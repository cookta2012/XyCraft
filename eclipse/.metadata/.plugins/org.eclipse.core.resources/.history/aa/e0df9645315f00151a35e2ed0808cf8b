package com.foxy.xycraft.block.machine;

import java.util.Random;

import com.foxy.xycraft.XyCraft;
import com.foxy.xycraft.XyTabs;
import com.foxy.xycraft.block.XyBaseBlock;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.IIcon;
import net.minecraft.world.IBlockAccess;
import net.minecraft.world.World;
import net.minecraftforge.common.util.ForgeDirection;
import net.minecraft.block.BlockRedstoneLight;;

public class XychoriumLamp extends XyBaseBlock {

	public XychoriumLamp(String blockName, boolean p_i45421_1_) {
		super(Material.iron);
		this.setBlockName(blockName);
		this.setHardness(1.5F);
		this.setStepSound(Block.soundTypeMetal);
		this.setCreativeTab(XyTabs.tabXMachines);
	}
	
	@SideOnly(Side.CLIENT)
    private IIcon icon[];
	
	@Override
    @SideOnly(Side.CLIENT)
    public void registerBlockIcons(IIconRegister iconRegister) {
        icon = new IIcon[2];
        icon[0] = iconRegister.registerIcon(XyCraft.INSTANCE + ":" + "machine/" + "XyLamp");
        icon[1] = iconRegister.registerIcon(XyCraft.INSTANCE + ":" + "fx/" + "XyGlowFX");
    }
	
	@Override
    @SideOnly(Side.CLIENT)
    public IIcon getIcon(int side, int meta) {
        if (side < 6)
            return icon[0];
        else
            return icon[1];
    }
	
	@Override
    public boolean canPlaceTorchOnTop(World world, int x, int y, int z) {
        return false;
    }
	
	@Override
    public boolean isSideSolid(IBlockAccess world, int x, int y, int z, ForgeDirection side) {
        return false;
    }
	
	@Override
    public void onBlockAdded(World world, int x, int y, int z) {
        processMeta(world, x, y, z);
    }
	
    @Override
    public void onNeighborBlockChange(World world, int x, int y, int z, Block block) {
        processMeta(world, x, y, z);
    }
    
    private void processMeta(World world, int x, int y, int z) {
        if (!world.isRemote) {
            if (world.isBlockIndirectlyGettingPowered(x, y, z))
                world.setBlockMetadataWithNotify(x, y, z, 1, 3);
            else
                world.setBlockMetadataWithNotify(x, y, z, 0, 3);
        }
    }

}
