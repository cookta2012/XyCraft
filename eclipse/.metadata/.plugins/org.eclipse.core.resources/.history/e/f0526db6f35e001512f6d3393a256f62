package com.foxy.xycraft.block.machine;

import java.util.Random;
import com.foxy.xycraft.XyCraft;
import com.foxy.xycraft.XyTabs;
import com.foxy.xycraft.block.XyBaseBlock;
import com.foxy.xycraft.render.RenderRegistry;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.init.Blocks;
import net.minecraft.util.IIcon;
import net.minecraft.world.IBlockAccess;
import net.minecraft.world.World;
import net.minecraftforge.common.IPlantable;
import net.minecraftforge.common.util.ForgeDirection;
import net.minecraft.block.BlockFarmland;
import net.minecraft.block.IGrowable;

public class XychoriumSoil extends XyBaseBlock {
	
	public int idBlock;

	public XychoriumSoil(String blockName) {
		super(Material.ground);
		this.setTickRandomly(true);
		this.setBlockName(blockName);
		this.setCreativeTab(XyTabs.tabXMachines);
		this.setHardness(1.5F);
		this.setStepSound(Block.soundTypeMetal);
	}
	
	@SideOnly(Side.CLIENT)
    private IIcon icon[];
	
	@Override
    @SideOnly(Side.CLIENT)
    public void registerBlockIcons(IIconRegister iconRegister) {
        this.icon = new IIcon[3];
        this.icon[0] = iconRegister.registerIcon(XyCraft.INSTANCE + ":" + "machine/soil/" + "XySoil_0");
        this.icon[1] = iconRegister.registerIcon(XyCraft.INSTANCE + ":" + "machine/soil/" + "XySoil_1");
        this.icon[2] = iconRegister.registerIcon(XyCraft.INSTANCE + ":" + "fx/" + "XyGlowFX");
    }
	
	@Override
    @SideOnly(Side.CLIENT)
    public IIcon getIcon(int side, int meta) {
		if (side < 6)
	      switch (side){
	        case 0: return icon[0];
	        case 1: return icon[0];
	        case 2: return icon[1];
	        case 3: return icon[1];
	        case 4: return icon[1];
	        case 5: return icon[1];
		  }
		else 
			return icon[2];
		
		return icon[side];
    }
	
	@Override
	public int tickRate(World p_149738_1_) {
		return 1000;
	}
	
	@Override
	public boolean canSustainPlant(IBlockAccess world, int x, int y, int z, ForgeDirection direction, IPlantable plantable) {
		return true;
	}
	
	public int countBlocks(World world, int x, int y, int z) {
		int count = 0;
		for (int i = 0; i < 10; i++) {
			if (world.getBlock(x, y - i, z) == this) {
				count++;
			}
		}
		return count;
	}
	
	@Override
	public void updateTick(World world, int x, int y, int z, Random rand) {
		if (rand.nextInt(11 - countBlocks(world, x, y, z)) == 0)
			if (world.getBlock(x, y + 1, z) instanceof IGrowable) {
				((IGrowable) world.getBlock(x, y + 1, z)).func_149853_b(world, rand, x, y + 1, z);

			}
	}
	
	@Override
	public boolean isFertile(World world, int x, int y, int z) {
		return true;
	}

}
